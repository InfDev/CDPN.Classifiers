@page "/"
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Localization
@inject IConfiguration Configuration
@inject IStringLocalizer<Index> Localizer

<h4>@Localizer["PageTitle"]</h4>

@((MarkupString)Localizer.GetString("PageDescription", openApiDocumentUrl).Value)
<br /><br />
<Row ItemsPerRow="ItemsPerRow.Three">
    <Card IsCenter="true" Class="shadow-sm">
        <CardBody>
            @((MarkupString)Localizer["CardDevelopmentPlatformBody"].Value)
        </CardBody>
    </Card>

    <Card IsCenter="true" Class="shadow-sm">
        <CardBody>
            @((MarkupString)Localizer["CardRuntimeBody"].Value)
        </CardBody>
    </Card>

    <Card IsCenter="true" Class="shadow-sm">
        <CardBody>
            @((MarkupString)Localizer["CardDatabaseBody"].Value)
        </CardBody>
    </Card>
</Row>
<br />
<Row ItemsPerRow="ItemsPerRow.Two">
    <Card IsCenter="true" Class="shadow-sm">
        <CardBody>
            @((MarkupString)Localizer["CardUIFrameworkBody"].Value)
        </CardBody>
    </Card>

    <Card IsCenter="true" Class="shadow-sm">
        <CardBody>
            @((MarkupString)Localizer["CardUIComponentsBody"].Value)
        </CardBody>
    </Card>
</Row>

@code {
    private string openApiDocumentUrl;

    protected override async Task OnInitializedAsync() => 
        openApiDocumentUrl = Configuration.GetValue<string>("ApiGatewayClassifiers:OpenApiDocumentUrl");

}
